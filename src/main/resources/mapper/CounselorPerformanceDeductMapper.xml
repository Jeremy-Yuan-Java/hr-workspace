<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrbc.business.mapper.CounselorPerformanceDeductMapper">
  <resultMap id="BaseResultMap" type="com.hrbc.business.domain.CounselorPerformanceDeduct">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="jcid" jdbcType="INTEGER" property="jcid" />
    <result column="jobs_candidates_id" jdbcType="INTEGER" property="jobsCandidatesId" />
    <result column="cno" jdbcType="VARCHAR" property="cno" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="jobno" jdbcType="VARCHAR" property="jobno" />
    <result column="jobdesc" jdbcType="VARCHAR" property="jobdesc" />
    <result column="candidatesid" jdbcType="INTEGER" property="candidatesid" />
    <result column="candidatesname" jdbcType="VARCHAR" property="candidatesname" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="createuser" jdbcType="VARCHAR" property="createuser" />
    <result column="ensurencetime" jdbcType="DATE" property="ensurencetime" />
    <result column="accounttime" jdbcType="DATE" property="accounttime" />
    <result column="accountmoney" jdbcType="DOUBLE" property="accountmoney" />
    <result column="prepareperformance" jdbcType="DOUBLE" property="prepareperformance" />
    <result column="practiceperformance" jdbcType="DOUBLE" property="practiceperformance" />
    <result column="deductmoney" jdbcType="DOUBLE" property="deductmoney" />
    <result column="deductratio" jdbcType="DOUBLE" property="deductratio" />
    <result column="deducttype" jdbcType="VARCHAR" property="deducttype" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="cnname" jdbcType="VARCHAR" property="cnname" />
    <result column="grantmoney" jdbcType="DOUBLE" property="grantmoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, jcid, jobs_candidates_id, cno, cname, jobno, jobdesc, candidatesid, candidatesname, 
    createtime, updatetime, createuser, ensurencetime, accounttime, accountmoney, prepareperformance, 
    practiceperformance, deductmoney, deductratio, deducttype, username, cnname, grantmoney
  </sql>
  <select id="selectByExample" parameterType="com.hrbc.business.domain.CounselorPerformanceDeductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from counselor_performance_deduct
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from counselor_performance_deduct
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from counselor_performance_deduct
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hrbc.business.domain.CounselorPerformanceDeductExample">
    delete from counselor_performance_deduct
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hrbc.business.domain.CounselorPerformanceDeduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into counselor_performance_deduct (jcid, jobs_candidates_id, cno, 
      cname, jobno, jobdesc, 
      candidatesid, candidatesname, createtime, 
      updatetime, createuser, ensurencetime, 
      accounttime, accountmoney, prepareperformance, 
      practiceperformance, deductmoney, deductratio, 
      deducttype, username, cnname, 
      grantmoney)
    values (#{jcid,jdbcType=INTEGER}, #{jobsCandidatesId,jdbcType=INTEGER}, #{cno,jdbcType=VARCHAR}, 
      #{cname,jdbcType=VARCHAR}, #{jobno,jdbcType=VARCHAR}, #{jobdesc,jdbcType=VARCHAR}, 
      #{candidatesid,jdbcType=INTEGER}, #{candidatesname,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{createuser,jdbcType=VARCHAR}, #{ensurencetime,jdbcType=DATE}, 
      #{accounttime,jdbcType=DATE}, #{accountmoney,jdbcType=DOUBLE}, #{prepareperformance,jdbcType=DOUBLE}, 
      #{practiceperformance,jdbcType=DOUBLE}, #{deductmoney,jdbcType=DOUBLE}, #{deductratio,jdbcType=DOUBLE}, 
      #{deducttype,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{cnname,jdbcType=VARCHAR}, 
      #{grantmoney,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.hrbc.business.domain.CounselorPerformanceDeduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into counselor_performance_deduct
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jcid != null">
        jcid,
      </if>
      <if test="jobsCandidatesId != null">
        jobs_candidates_id,
      </if>
      <if test="cno != null">
        cno,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="jobno != null">
        jobno,
      </if>
      <if test="jobdesc != null">
        jobdesc,
      </if>
      <if test="candidatesid != null">
        candidatesid,
      </if>
      <if test="candidatesname != null">
        candidatesname,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="createuser != null">
        createuser,
      </if>
      <if test="ensurencetime != null">
        ensurencetime,
      </if>
      <if test="accounttime != null">
        accounttime,
      </if>
      <if test="accountmoney != null">
        accountmoney,
      </if>
      <if test="prepareperformance != null">
        prepareperformance,
      </if>
      <if test="practiceperformance != null">
        practiceperformance,
      </if>
      <if test="deductmoney != null">
        deductmoney,
      </if>
      <if test="deductratio != null">
        deductratio,
      </if>
      <if test="deducttype != null">
        deducttype,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="cnname != null">
        cnname,
      </if>
      <if test="grantmoney != null">
        grantmoney,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jcid != null">
        #{jcid,jdbcType=INTEGER},
      </if>
      <if test="jobsCandidatesId != null">
        #{jobsCandidatesId,jdbcType=INTEGER},
      </if>
      <if test="cno != null">
        #{cno,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="jobno != null">
        #{jobno,jdbcType=VARCHAR},
      </if>
      <if test="jobdesc != null">
        #{jobdesc,jdbcType=VARCHAR},
      </if>
      <if test="candidatesid != null">
        #{candidatesid,jdbcType=INTEGER},
      </if>
      <if test="candidatesname != null">
        #{candidatesname,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="ensurencetime != null">
        #{ensurencetime,jdbcType=DATE},
      </if>
      <if test="accounttime != null">
        #{accounttime,jdbcType=DATE},
      </if>
      <if test="accountmoney != null">
        #{accountmoney,jdbcType=DOUBLE},
      </if>
      <if test="prepareperformance != null">
        #{prepareperformance,jdbcType=DOUBLE},
      </if>
      <if test="practiceperformance != null">
        #{practiceperformance,jdbcType=DOUBLE},
      </if>
      <if test="deductmoney != null">
        #{deductmoney,jdbcType=DOUBLE},
      </if>
      <if test="deductratio != null">
        #{deductratio,jdbcType=DOUBLE},
      </if>
      <if test="deducttype != null">
        #{deducttype,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="cnname != null">
        #{cnname,jdbcType=VARCHAR},
      </if>
      <if test="grantmoney != null">
        #{grantmoney,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hrbc.business.domain.CounselorPerformanceDeductExample" resultType="java.lang.Long">
    select count(*) from counselor_performance_deduct
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update counselor_performance_deduct
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jcid != null">
        jcid = #{record.jcid,jdbcType=INTEGER},
      </if>
      <if test="record.jobsCandidatesId != null">
        jobs_candidates_id = #{record.jobsCandidatesId,jdbcType=INTEGER},
      </if>
      <if test="record.cno != null">
        cno = #{record.cno,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.jobno != null">
        jobno = #{record.jobno,jdbcType=VARCHAR},
      </if>
      <if test="record.jobdesc != null">
        jobdesc = #{record.jobdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.candidatesid != null">
        candidatesid = #{record.candidatesid,jdbcType=INTEGER},
      </if>
      <if test="record.candidatesname != null">
        candidatesname = #{record.candidatesname,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null">
        createuser = #{record.createuser,jdbcType=VARCHAR},
      </if>
      <if test="record.ensurencetime != null">
        ensurencetime = #{record.ensurencetime,jdbcType=DATE},
      </if>
      <if test="record.accounttime != null">
        accounttime = #{record.accounttime,jdbcType=DATE},
      </if>
      <if test="record.accountmoney != null">
        accountmoney = #{record.accountmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.prepareperformance != null">
        prepareperformance = #{record.prepareperformance,jdbcType=DOUBLE},
      </if>
      <if test="record.practiceperformance != null">
        practiceperformance = #{record.practiceperformance,jdbcType=DOUBLE},
      </if>
      <if test="record.deductmoney != null">
        deductmoney = #{record.deductmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.deductratio != null">
        deductratio = #{record.deductratio,jdbcType=DOUBLE},
      </if>
      <if test="record.deducttype != null">
        deducttype = #{record.deducttype,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.cnname != null">
        cnname = #{record.cnname,jdbcType=VARCHAR},
      </if>
      <if test="record.grantmoney != null">
        grantmoney = #{record.grantmoney,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update counselor_performance_deduct
    set id = #{record.id,jdbcType=INTEGER},
      jcid = #{record.jcid,jdbcType=INTEGER},
      jobs_candidates_id = #{record.jobsCandidatesId,jdbcType=INTEGER},
      cno = #{record.cno,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      jobno = #{record.jobno,jdbcType=VARCHAR},
      jobdesc = #{record.jobdesc,jdbcType=VARCHAR},
      candidatesid = #{record.candidatesid,jdbcType=INTEGER},
      candidatesname = #{record.candidatesname,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=VARCHAR},
      ensurencetime = #{record.ensurencetime,jdbcType=DATE},
      accounttime = #{record.accounttime,jdbcType=DATE},
      accountmoney = #{record.accountmoney,jdbcType=DOUBLE},
      prepareperformance = #{record.prepareperformance,jdbcType=DOUBLE},
      practiceperformance = #{record.practiceperformance,jdbcType=DOUBLE},
      deductmoney = #{record.deductmoney,jdbcType=DOUBLE},
      deductratio = #{record.deductratio,jdbcType=DOUBLE},
      deducttype = #{record.deducttype,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      cnname = #{record.cnname,jdbcType=VARCHAR},
      grantmoney = #{record.grantmoney,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hrbc.business.domain.CounselorPerformanceDeduct">
    update counselor_performance_deduct
    <set>
      <if test="jcid != null">
        jcid = #{jcid,jdbcType=INTEGER},
      </if>
      <if test="jobsCandidatesId != null">
        jobs_candidates_id = #{jobsCandidatesId,jdbcType=INTEGER},
      </if>
      <if test="cno != null">
        cno = #{cno,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="jobno != null">
        jobno = #{jobno,jdbcType=VARCHAR},
      </if>
      <if test="jobdesc != null">
        jobdesc = #{jobdesc,jdbcType=VARCHAR},
      </if>
      <if test="candidatesid != null">
        candidatesid = #{candidatesid,jdbcType=INTEGER},
      </if>
      <if test="candidatesname != null">
        candidatesname = #{candidatesname,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        createuser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="ensurencetime != null">
        ensurencetime = #{ensurencetime,jdbcType=DATE},
      </if>
      <if test="accounttime != null">
        accounttime = #{accounttime,jdbcType=DATE},
      </if>
      <if test="accountmoney != null">
        accountmoney = #{accountmoney,jdbcType=DOUBLE},
      </if>
      <if test="prepareperformance != null">
        prepareperformance = #{prepareperformance,jdbcType=DOUBLE},
      </if>
      <if test="practiceperformance != null">
        practiceperformance = #{practiceperformance,jdbcType=DOUBLE},
      </if>
      <if test="deductmoney != null">
        deductmoney = #{deductmoney,jdbcType=DOUBLE},
      </if>
      <if test="deductratio != null">
        deductratio = #{deductratio,jdbcType=DOUBLE},
      </if>
      <if test="deducttype != null">
        deducttype = #{deducttype,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="cnname != null">
        cnname = #{cnname,jdbcType=VARCHAR},
      </if>
      <if test="grantmoney != null">
        grantmoney = #{grantmoney,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hrbc.business.domain.CounselorPerformanceDeduct">
    update counselor_performance_deduct
    set jcid = #{jcid,jdbcType=INTEGER},
      jobs_candidates_id = #{jobsCandidatesId,jdbcType=INTEGER},
      cno = #{cno,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      jobno = #{jobno,jdbcType=VARCHAR},
      jobdesc = #{jobdesc,jdbcType=VARCHAR},
      candidatesid = #{candidatesid,jdbcType=INTEGER},
      candidatesname = #{candidatesname,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=VARCHAR},
      ensurencetime = #{ensurencetime,jdbcType=DATE},
      accounttime = #{accounttime,jdbcType=DATE},
      accountmoney = #{accountmoney,jdbcType=DOUBLE},
      prepareperformance = #{prepareperformance,jdbcType=DOUBLE},
      practiceperformance = #{practiceperformance,jdbcType=DOUBLE},
      deductmoney = #{deductmoney,jdbcType=DOUBLE},
      deductratio = #{deductratio,jdbcType=DOUBLE},
      deducttype = #{deducttype,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      cnname = #{cnname,jdbcType=VARCHAR},
      grantmoney = #{grantmoney,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into counselor_performance_deduct (
    jcid,
    jobs_candidates_id,
    cno,
    cname,
    jobno,
    jobdesc,
    candidatesid,
    candidatesname,
    createtime,
    updatetime,
    createuser,
    ensurencetime,
    accounttime,
    accountmoney,
    prepareperformance,
    practiceperformance,
    deductmoney,
    deductratio,
    deducttype,
    username,
    cnname,
    grantmoney
    )
    values
    <foreach collection="recordList" index="index" item="item" separator=",">
      (
      #{item.jcid,jdbcType=INTEGER},
      #{item.jobsCandidatesId,jdbcType=INTEGER},
      #{item.cno,jdbcType=VARCHAR},
      #{item.cname,jdbcType=VARCHAR},
      #{item.jobno,jdbcType=VARCHAR},
      #{item.jobdesc,jdbcType=VARCHAR},
      #{item.candidatesid,jdbcType=INTEGER},
      #{item.candidatesname,jdbcType=VARCHAR},
      #{item.createtime,jdbcType=TIMESTAMP},
      #{item.updatetime,jdbcType=TIMESTAMP},
      #{item.createuser,jdbcType=VARCHAR},
      #{item.ensurencetime,jdbcType=DATE},
      #{item.accounttime,jdbcType=DATE},
      #{item.accountmoney,jdbcType=DOUBLE},
      #{item.prepareperformance,jdbcType=DOUBLE},
      #{item.practiceperformance,jdbcType=DOUBLE},
      #{item.deductmoney,jdbcType=DOUBLE},
      #{item.deductratio,jdbcType=DOUBLE},
      #{item.deducttype,jdbcType=VARCHAR},
      #{item.username,jdbcType=VARCHAR},
      #{item.cnname,jdbcType=VARCHAR},
      #{item.grantmoney,jdbcType=DOUBLE}
      )
    </foreach>
  </insert>
</mapper>