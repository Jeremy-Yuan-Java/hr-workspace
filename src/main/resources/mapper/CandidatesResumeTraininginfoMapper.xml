<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrbc.business.mapper.CandidatesResumeTraininginfoMapper">
  <resultMap id="BaseResultMap" type="com.hrbc.business.domain.CandidatesResumeTraininginfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="resumeid" jdbcType="INTEGER" property="resumeid" />
    <result column="startdate" jdbcType="DATE" property="startdate" />
    <result column="enddate" jdbcType="DATE" property="enddate" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="traininginstituion" jdbcType="VARCHAR" property="traininginstituion" />
    <result column="traininglocation" jdbcType="VARCHAR" property="traininglocation" />
    <result column="trainingcourse" jdbcType="VARCHAR" property="trainingcourse" />
    <result column="certificate" jdbcType="VARCHAR" property="certificate" />
    <result column="candidatesnum" jdbcType="INTEGER" property="candidatesnum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hrbc.business.domain.CandidatesResumeTraininginfo">
    <result column="descriptionindetails" jdbcType="LONGVARCHAR" property="descriptionindetails" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, resumeid, startdate, enddate, title, traininginstituion, traininglocation, trainingcourse, 
    certificate, candidatesnum
  </sql>
  <sql id="Blob_Column_List">
    descriptionindetails
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hrbc.business.domain.CandidatesResumeTraininginfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from candidates_resume_traininginfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hrbc.business.domain.CandidatesResumeTraininginfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from candidates_resume_traininginfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from candidates_resume_traininginfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from candidates_resume_traininginfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hrbc.business.domain.CandidatesResumeTraininginfoExample">
    delete from candidates_resume_traininginfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hrbc.business.domain.CandidatesResumeTraininginfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into candidates_resume_traininginfo (resumeid, startdate, enddate, 
      title, traininginstituion, traininglocation, 
      trainingcourse, certificate, candidatesnum, 
      descriptionindetails)
    values (#{resumeid,jdbcType=INTEGER}, #{startdate,jdbcType=DATE}, #{enddate,jdbcType=DATE}, 
      #{title,jdbcType=VARCHAR}, #{traininginstituion,jdbcType=VARCHAR}, #{traininglocation,jdbcType=VARCHAR}, 
      #{trainingcourse,jdbcType=VARCHAR}, #{certificate,jdbcType=VARCHAR}, #{candidatesnum,jdbcType=INTEGER}, 
      #{descriptionindetails,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hrbc.business.domain.CandidatesResumeTraininginfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into candidates_resume_traininginfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resumeid != null">
        resumeid,
      </if>
      <if test="startdate != null">
        startdate,
      </if>
      <if test="enddate != null">
        enddate,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="traininginstituion != null">
        traininginstituion,
      </if>
      <if test="traininglocation != null">
        traininglocation,
      </if>
      <if test="trainingcourse != null">
        trainingcourse,
      </if>
      <if test="certificate != null">
        certificate,
      </if>
      <if test="candidatesnum != null">
        candidatesnum,
      </if>
      <if test="descriptionindetails != null">
        descriptionindetails,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resumeid != null">
        #{resumeid,jdbcType=INTEGER},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=DATE},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="traininginstituion != null">
        #{traininginstituion,jdbcType=VARCHAR},
      </if>
      <if test="traininglocation != null">
        #{traininglocation,jdbcType=VARCHAR},
      </if>
      <if test="trainingcourse != null">
        #{trainingcourse,jdbcType=VARCHAR},
      </if>
      <if test="certificate != null">
        #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="candidatesnum != null">
        #{candidatesnum,jdbcType=INTEGER},
      </if>
      <if test="descriptionindetails != null">
        #{descriptionindetails,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hrbc.business.domain.CandidatesResumeTraininginfoExample" resultType="java.lang.Long">
    select count(*) from candidates_resume_traininginfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update candidates_resume_traininginfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.resumeid != null">
        resumeid = #{record.resumeid,jdbcType=INTEGER},
      </if>
      <if test="record.startdate != null">
        startdate = #{record.startdate,jdbcType=DATE},
      </if>
      <if test="record.enddate != null">
        enddate = #{record.enddate,jdbcType=DATE},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.traininginstituion != null">
        traininginstituion = #{record.traininginstituion,jdbcType=VARCHAR},
      </if>
      <if test="record.traininglocation != null">
        traininglocation = #{record.traininglocation,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingcourse != null">
        trainingcourse = #{record.trainingcourse,jdbcType=VARCHAR},
      </if>
      <if test="record.certificate != null">
        certificate = #{record.certificate,jdbcType=VARCHAR},
      </if>
      <if test="record.candidatesnum != null">
        candidatesnum = #{record.candidatesnum,jdbcType=INTEGER},
      </if>
      <if test="record.descriptionindetails != null">
        descriptionindetails = #{record.descriptionindetails,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update candidates_resume_traininginfo
    set id = #{record.id,jdbcType=INTEGER},
      resumeid = #{record.resumeid,jdbcType=INTEGER},
      startdate = #{record.startdate,jdbcType=DATE},
      enddate = #{record.enddate,jdbcType=DATE},
      title = #{record.title,jdbcType=VARCHAR},
      traininginstituion = #{record.traininginstituion,jdbcType=VARCHAR},
      traininglocation = #{record.traininglocation,jdbcType=VARCHAR},
      trainingcourse = #{record.trainingcourse,jdbcType=VARCHAR},
      certificate = #{record.certificate,jdbcType=VARCHAR},
      candidatesnum = #{record.candidatesnum,jdbcType=INTEGER},
      descriptionindetails = #{record.descriptionindetails,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update candidates_resume_traininginfo
    set id = #{record.id,jdbcType=INTEGER},
      resumeid = #{record.resumeid,jdbcType=INTEGER},
      startdate = #{record.startdate,jdbcType=DATE},
      enddate = #{record.enddate,jdbcType=DATE},
      title = #{record.title,jdbcType=VARCHAR},
      traininginstituion = #{record.traininginstituion,jdbcType=VARCHAR},
      traininglocation = #{record.traininglocation,jdbcType=VARCHAR},
      trainingcourse = #{record.trainingcourse,jdbcType=VARCHAR},
      certificate = #{record.certificate,jdbcType=VARCHAR},
      candidatesnum = #{record.candidatesnum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hrbc.business.domain.CandidatesResumeTraininginfo">
    update candidates_resume_traininginfo
    <set>
      <if test="resumeid != null">
        resumeid = #{resumeid,jdbcType=INTEGER},
      </if>
      <if test="startdate != null">
        startdate = #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        enddate = #{enddate,jdbcType=DATE},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="traininginstituion != null">
        traininginstituion = #{traininginstituion,jdbcType=VARCHAR},
      </if>
      <if test="traininglocation != null">
        traininglocation = #{traininglocation,jdbcType=VARCHAR},
      </if>
      <if test="trainingcourse != null">
        trainingcourse = #{trainingcourse,jdbcType=VARCHAR},
      </if>
      <if test="certificate != null">
        certificate = #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="candidatesnum != null">
        candidatesnum = #{candidatesnum,jdbcType=INTEGER},
      </if>
      <if test="descriptionindetails != null">
        descriptionindetails = #{descriptionindetails,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hrbc.business.domain.CandidatesResumeTraininginfo">
    update candidates_resume_traininginfo
    set resumeid = #{resumeid,jdbcType=INTEGER},
      startdate = #{startdate,jdbcType=DATE},
      enddate = #{enddate,jdbcType=DATE},
      title = #{title,jdbcType=VARCHAR},
      traininginstituion = #{traininginstituion,jdbcType=VARCHAR},
      traininglocation = #{traininglocation,jdbcType=VARCHAR},
      trainingcourse = #{trainingcourse,jdbcType=VARCHAR},
      certificate = #{certificate,jdbcType=VARCHAR},
      candidatesnum = #{candidatesnum,jdbcType=INTEGER},
      descriptionindetails = #{descriptionindetails,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hrbc.business.domain.CandidatesResumeTraininginfo">
    update candidates_resume_traininginfo
    set resumeid = #{resumeid,jdbcType=INTEGER},
      startdate = #{startdate,jdbcType=DATE},
      enddate = #{enddate,jdbcType=DATE},
      title = #{title,jdbcType=VARCHAR},
      traininginstituion = #{traininginstituion,jdbcType=VARCHAR},
      traininglocation = #{traininglocation,jdbcType=VARCHAR},
      trainingcourse = #{trainingcourse,jdbcType=VARCHAR},
      certificate = #{certificate,jdbcType=VARCHAR},
      candidatesnum = #{candidatesnum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into candidates_resume_traininginfo (
    resumeid,
    startdate,
    enddate,
    title,
    traininginstituion,
    traininglocation,
    trainingcourse,
    certificate,
    candidatesnum,
    descriptionindetails
    )
    values
    <foreach collection="recordList" index="index" item="item" separator=",">
      (
      #{item.resumeid,jdbcType=INTEGER},
      #{item.startdate,jdbcType=DATE},
      #{item.enddate,jdbcType=DATE},
      #{item.title,jdbcType=VARCHAR},
      #{item.traininginstituion,jdbcType=VARCHAR},
      #{item.traininglocation,jdbcType=VARCHAR},
      #{item.trainingcourse,jdbcType=VARCHAR},
      #{item.certificate,jdbcType=VARCHAR},
      #{item.candidatesnum,jdbcType=INTEGER},
      #{item.descriptionindetails,jdbcType=LONGVARCHAR}
      )
    </foreach>
  </insert>
</mapper>