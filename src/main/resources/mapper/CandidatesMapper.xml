<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrbc.business.mapper.CandidatesMapper">
  <resultMap id="BaseResultMap" type="com.hrbc.business.domain.Candidates">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="phoneno" jdbcType="VARCHAR" property="phoneno" />
    <result column="phonenobak" jdbcType="VARCHAR" property="phonenobak" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="emailbak" jdbcType="VARCHAR" property="emailbak" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="picpath" jdbcType="VARCHAR" property="picpath" />
    <result column="postcard" jdbcType="VARCHAR" property="postcard" />
    <result column="jobtitle" jdbcType="VARCHAR" property="jobtitle" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="majorsub" jdbcType="VARCHAR" property="majorsub" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="salarymin" jdbcType="INTEGER" property="salarymin" />
    <result column="salarymax" jdbcType="INTEGER" property="salarymax" />
    <result column="constellation" jdbcType="VARCHAR" property="constellation" />
    <result column="hometown" jdbcType="VARCHAR" property="hometown" />
    <result column="workbase" jdbcType="VARCHAR" property="workbase" />
    <result column="expectworkbase" jdbcType="VARCHAR" property="expectworkbase" />
    <result column="lastcompany" jdbcType="VARCHAR" property="lastcompany" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="worksate" jdbcType="INTEGER" property="worksate" />
    <result column="resumestate" jdbcType="INTEGER" property="resumestate" />
    <result column="resumefile" jdbcType="VARCHAR" property="resumefile" />
    <result column="dresume" jdbcType="VARCHAR" property="dresume" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="delflag" jdbcType="INTEGER" property="delflag" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="educations" jdbcType="VARCHAR" property="educations" />
    <result column="workexperiences" jdbcType="VARCHAR" property="workexperiences" />
    <result column="expectjob" jdbcType="VARCHAR" property="expectjob" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="languagelevel" jdbcType="VARCHAR" property="languagelevel" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="livebase" jdbcType="VARCHAR" property="livebase" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hrbc.business.domain.CandidatesWithBLOBs">
    <result column="resumedetail" jdbcType="LONGVARBINARY" property="resumedetail" />
    <result column="resumedetail1" jdbcType="LONGVARBINARY" property="resumedetail1" />
    <result column="resumedetail2" jdbcType="LONGVARBINARY" property="resumedetail2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, phoneno, phonenobak, email, emailbak, idcard, picpath, postcard, jobtitle, 
    age, gender, education, major, majorsub, salary, salarymin, salarymax, constellation, 
    hometown, workbase, expectworkbase, lastcompany, tags, worksate, resumestate, resumefile, 
    dresume, state, delflag, createtime, updatetime, educations, workexperiences, expectjob, 
    weight, languagelevel, degree, livebase
  </sql>
  <sql id="Blob_Column_List">
    resumedetail, resumedetail1, resumedetail2
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hrbc.business.domain.CandidatesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from candidates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hrbc.business.domain.CandidatesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from candidates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from candidates
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from candidates
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hrbc.business.domain.CandidatesExample">
    delete from candidates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hrbc.business.domain.CandidatesWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into candidates (username, phoneno, phonenobak, 
      email, emailbak, idcard, 
      picpath, postcard, jobtitle, 
      age, gender, education, 
      major, majorsub, salary, 
      salarymin, salarymax, constellation, 
      hometown, workbase, expectworkbase, 
      lastcompany, tags, worksate, 
      resumestate, resumefile, dresume, 
      state, delflag, createtime, 
      updatetime, educations, workexperiences, 
      expectjob, weight, languagelevel, 
      degree, livebase, resumedetail, 
      resumedetail1, resumedetail2
      )
    values (#{username,jdbcType=VARCHAR}, #{phoneno,jdbcType=VARCHAR}, #{phonenobak,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{emailbak,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{picpath,jdbcType=VARCHAR}, #{postcard,jdbcType=VARCHAR}, #{jobtitle,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{gender,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{majorsub,jdbcType=VARCHAR}, #{salary,jdbcType=INTEGER}, 
      #{salarymin,jdbcType=INTEGER}, #{salarymax,jdbcType=INTEGER}, #{constellation,jdbcType=VARCHAR}, 
      #{hometown,jdbcType=VARCHAR}, #{workbase,jdbcType=VARCHAR}, #{expectworkbase,jdbcType=VARCHAR}, 
      #{lastcompany,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, #{worksate,jdbcType=INTEGER}, 
      #{resumestate,jdbcType=INTEGER}, #{resumefile,jdbcType=VARCHAR}, #{dresume,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{delflag,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{educations,jdbcType=VARCHAR}, #{workexperiences,jdbcType=VARCHAR}, 
      #{expectjob,jdbcType=VARCHAR}, #{weight,jdbcType=INTEGER}, #{languagelevel,jdbcType=VARCHAR}, 
      #{degree,jdbcType=VARCHAR}, #{livebase,jdbcType=VARCHAR}, #{resumedetail,jdbcType=LONGVARBINARY}, 
      #{resumedetail1,jdbcType=LONGVARBINARY}, #{resumedetail2,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hrbc.business.domain.CandidatesWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into candidates
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="phoneno != null">
        phoneno,
      </if>
      <if test="phonenobak != null">
        phonenobak,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="emailbak != null">
        emailbak,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="picpath != null">
        picpath,
      </if>
      <if test="postcard != null">
        postcard,
      </if>
      <if test="jobtitle != null">
        jobtitle,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="majorsub != null">
        majorsub,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="salarymin != null">
        salarymin,
      </if>
      <if test="salarymax != null">
        salarymax,
      </if>
      <if test="constellation != null">
        constellation,
      </if>
      <if test="hometown != null">
        hometown,
      </if>
      <if test="workbase != null">
        workbase,
      </if>
      <if test="expectworkbase != null">
        expectworkbase,
      </if>
      <if test="lastcompany != null">
        lastcompany,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="worksate != null">
        worksate,
      </if>
      <if test="resumestate != null">
        resumestate,
      </if>
      <if test="resumefile != null">
        resumefile,
      </if>
      <if test="dresume != null">
        dresume,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="delflag != null">
        delflag,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="educations != null">
        educations,
      </if>
      <if test="workexperiences != null">
        workexperiences,
      </if>
      <if test="expectjob != null">
        expectjob,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="languagelevel != null">
        languagelevel,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="livebase != null">
        livebase,
      </if>
      <if test="resumedetail != null">
        resumedetail,
      </if>
      <if test="resumedetail1 != null">
        resumedetail1,
      </if>
      <if test="resumedetail2 != null">
        resumedetail2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phoneno != null">
        #{phoneno,jdbcType=VARCHAR},
      </if>
      <if test="phonenobak != null">
        #{phonenobak,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailbak != null">
        #{emailbak,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="picpath != null">
        #{picpath,jdbcType=VARCHAR},
      </if>
      <if test="postcard != null">
        #{postcard,jdbcType=VARCHAR},
      </if>
      <if test="jobtitle != null">
        #{jobtitle,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="majorsub != null">
        #{majorsub,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="salarymin != null">
        #{salarymin,jdbcType=INTEGER},
      </if>
      <if test="salarymax != null">
        #{salarymax,jdbcType=INTEGER},
      </if>
      <if test="constellation != null">
        #{constellation,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null">
        #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="workbase != null">
        #{workbase,jdbcType=VARCHAR},
      </if>
      <if test="expectworkbase != null">
        #{expectworkbase,jdbcType=VARCHAR},
      </if>
      <if test="lastcompany != null">
        #{lastcompany,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="worksate != null">
        #{worksate,jdbcType=INTEGER},
      </if>
      <if test="resumestate != null">
        #{resumestate,jdbcType=INTEGER},
      </if>
      <if test="resumefile != null">
        #{resumefile,jdbcType=VARCHAR},
      </if>
      <if test="dresume != null">
        #{dresume,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="delflag != null">
        #{delflag,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="educations != null">
        #{educations,jdbcType=VARCHAR},
      </if>
      <if test="workexperiences != null">
        #{workexperiences,jdbcType=VARCHAR},
      </if>
      <if test="expectjob != null">
        #{expectjob,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="languagelevel != null">
        #{languagelevel,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="livebase != null">
        #{livebase,jdbcType=VARCHAR},
      </if>
      <if test="resumedetail != null">
        #{resumedetail,jdbcType=LONGVARBINARY},
      </if>
      <if test="resumedetail1 != null">
        #{resumedetail1,jdbcType=LONGVARBINARY},
      </if>
      <if test="resumedetail2 != null">
        #{resumedetail2,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hrbc.business.domain.CandidatesExample" resultType="java.lang.Long">
    select count(*) from candidates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update candidates
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneno != null">
        phoneno = #{record.phoneno,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenobak != null">
        phonenobak = #{record.phonenobak,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.emailbak != null">
        emailbak = #{record.emailbak,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.picpath != null">
        picpath = #{record.picpath,jdbcType=VARCHAR},
      </if>
      <if test="record.postcard != null">
        postcard = #{record.postcard,jdbcType=VARCHAR},
      </if>
      <if test="record.jobtitle != null">
        jobtitle = #{record.jobtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.majorsub != null">
        majorsub = #{record.majorsub,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=INTEGER},
      </if>
      <if test="record.salarymin != null">
        salarymin = #{record.salarymin,jdbcType=INTEGER},
      </if>
      <if test="record.salarymax != null">
        salarymax = #{record.salarymax,jdbcType=INTEGER},
      </if>
      <if test="record.constellation != null">
        constellation = #{record.constellation,jdbcType=VARCHAR},
      </if>
      <if test="record.hometown != null">
        hometown = #{record.hometown,jdbcType=VARCHAR},
      </if>
      <if test="record.workbase != null">
        workbase = #{record.workbase,jdbcType=VARCHAR},
      </if>
      <if test="record.expectworkbase != null">
        expectworkbase = #{record.expectworkbase,jdbcType=VARCHAR},
      </if>
      <if test="record.lastcompany != null">
        lastcompany = #{record.lastcompany,jdbcType=VARCHAR},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.worksate != null">
        worksate = #{record.worksate,jdbcType=INTEGER},
      </if>
      <if test="record.resumestate != null">
        resumestate = #{record.resumestate,jdbcType=INTEGER},
      </if>
      <if test="record.resumefile != null">
        resumefile = #{record.resumefile,jdbcType=VARCHAR},
      </if>
      <if test="record.dresume != null">
        dresume = #{record.dresume,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.delflag != null">
        delflag = #{record.delflag,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.educations != null">
        educations = #{record.educations,jdbcType=VARCHAR},
      </if>
      <if test="record.workexperiences != null">
        workexperiences = #{record.workexperiences,jdbcType=VARCHAR},
      </if>
      <if test="record.expectjob != null">
        expectjob = #{record.expectjob,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.languagelevel != null">
        languagelevel = #{record.languagelevel,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.livebase != null">
        livebase = #{record.livebase,jdbcType=VARCHAR},
      </if>
      <if test="record.resumedetail != null">
        resumedetail = #{record.resumedetail,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.resumedetail1 != null">
        resumedetail1 = #{record.resumedetail1,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.resumedetail2 != null">
        resumedetail2 = #{record.resumedetail2,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update candidates
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      phoneno = #{record.phoneno,jdbcType=VARCHAR},
      phonenobak = #{record.phonenobak,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      emailbak = #{record.emailbak,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      picpath = #{record.picpath,jdbcType=VARCHAR},
      postcard = #{record.postcard,jdbcType=VARCHAR},
      jobtitle = #{record.jobtitle,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      majorsub = #{record.majorsub,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=INTEGER},
      salarymin = #{record.salarymin,jdbcType=INTEGER},
      salarymax = #{record.salarymax,jdbcType=INTEGER},
      constellation = #{record.constellation,jdbcType=VARCHAR},
      hometown = #{record.hometown,jdbcType=VARCHAR},
      workbase = #{record.workbase,jdbcType=VARCHAR},
      expectworkbase = #{record.expectworkbase,jdbcType=VARCHAR},
      lastcompany = #{record.lastcompany,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      worksate = #{record.worksate,jdbcType=INTEGER},
      resumestate = #{record.resumestate,jdbcType=INTEGER},
      resumefile = #{record.resumefile,jdbcType=VARCHAR},
      dresume = #{record.dresume,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      delflag = #{record.delflag,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      educations = #{record.educations,jdbcType=VARCHAR},
      workexperiences = #{record.workexperiences,jdbcType=VARCHAR},
      expectjob = #{record.expectjob,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=INTEGER},
      languagelevel = #{record.languagelevel,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      livebase = #{record.livebase,jdbcType=VARCHAR},
      resumedetail = #{record.resumedetail,jdbcType=LONGVARBINARY},
      resumedetail1 = #{record.resumedetail1,jdbcType=LONGVARBINARY},
      resumedetail2 = #{record.resumedetail2,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update candidates
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      phoneno = #{record.phoneno,jdbcType=VARCHAR},
      phonenobak = #{record.phonenobak,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      emailbak = #{record.emailbak,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      picpath = #{record.picpath,jdbcType=VARCHAR},
      postcard = #{record.postcard,jdbcType=VARCHAR},
      jobtitle = #{record.jobtitle,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      majorsub = #{record.majorsub,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=INTEGER},
      salarymin = #{record.salarymin,jdbcType=INTEGER},
      salarymax = #{record.salarymax,jdbcType=INTEGER},
      constellation = #{record.constellation,jdbcType=VARCHAR},
      hometown = #{record.hometown,jdbcType=VARCHAR},
      workbase = #{record.workbase,jdbcType=VARCHAR},
      expectworkbase = #{record.expectworkbase,jdbcType=VARCHAR},
      lastcompany = #{record.lastcompany,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      worksate = #{record.worksate,jdbcType=INTEGER},
      resumestate = #{record.resumestate,jdbcType=INTEGER},
      resumefile = #{record.resumefile,jdbcType=VARCHAR},
      dresume = #{record.dresume,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      delflag = #{record.delflag,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      educations = #{record.educations,jdbcType=VARCHAR},
      workexperiences = #{record.workexperiences,jdbcType=VARCHAR},
      expectjob = #{record.expectjob,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=INTEGER},
      languagelevel = #{record.languagelevel,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      livebase = #{record.livebase,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hrbc.business.domain.CandidatesWithBLOBs">
    update candidates
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phoneno != null">
        phoneno = #{phoneno,jdbcType=VARCHAR},
      </if>
      <if test="phonenobak != null">
        phonenobak = #{phonenobak,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailbak != null">
        emailbak = #{emailbak,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="picpath != null">
        picpath = #{picpath,jdbcType=VARCHAR},
      </if>
      <if test="postcard != null">
        postcard = #{postcard,jdbcType=VARCHAR},
      </if>
      <if test="jobtitle != null">
        jobtitle = #{jobtitle,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="majorsub != null">
        majorsub = #{majorsub,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="salarymin != null">
        salarymin = #{salarymin,jdbcType=INTEGER},
      </if>
      <if test="salarymax != null">
        salarymax = #{salarymax,jdbcType=INTEGER},
      </if>
      <if test="constellation != null">
        constellation = #{constellation,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null">
        hometown = #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="workbase != null">
        workbase = #{workbase,jdbcType=VARCHAR},
      </if>
      <if test="expectworkbase != null">
        expectworkbase = #{expectworkbase,jdbcType=VARCHAR},
      </if>
      <if test="lastcompany != null">
        lastcompany = #{lastcompany,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="worksate != null">
        worksate = #{worksate,jdbcType=INTEGER},
      </if>
      <if test="resumestate != null">
        resumestate = #{resumestate,jdbcType=INTEGER},
      </if>
      <if test="resumefile != null">
        resumefile = #{resumefile,jdbcType=VARCHAR},
      </if>
      <if test="dresume != null">
        dresume = #{dresume,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="delflag != null">
        delflag = #{delflag,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="educations != null">
        educations = #{educations,jdbcType=VARCHAR},
      </if>
      <if test="workexperiences != null">
        workexperiences = #{workexperiences,jdbcType=VARCHAR},
      </if>
      <if test="expectjob != null">
        expectjob = #{expectjob,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="languagelevel != null">
        languagelevel = #{languagelevel,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="livebase != null">
        livebase = #{livebase,jdbcType=VARCHAR},
      </if>
      <if test="resumedetail != null">
        resumedetail = #{resumedetail,jdbcType=LONGVARBINARY},
      </if>
      <if test="resumedetail1 != null">
        resumedetail1 = #{resumedetail1,jdbcType=LONGVARBINARY},
      </if>
      <if test="resumedetail2 != null">
        resumedetail2 = #{resumedetail2,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hrbc.business.domain.CandidatesWithBLOBs">
    update candidates
    set username = #{username,jdbcType=VARCHAR},
      phoneno = #{phoneno,jdbcType=VARCHAR},
      phonenobak = #{phonenobak,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      emailbak = #{emailbak,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      picpath = #{picpath,jdbcType=VARCHAR},
      postcard = #{postcard,jdbcType=VARCHAR},
      jobtitle = #{jobtitle,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      majorsub = #{majorsub,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=INTEGER},
      salarymin = #{salarymin,jdbcType=INTEGER},
      salarymax = #{salarymax,jdbcType=INTEGER},
      constellation = #{constellation,jdbcType=VARCHAR},
      hometown = #{hometown,jdbcType=VARCHAR},
      workbase = #{workbase,jdbcType=VARCHAR},
      expectworkbase = #{expectworkbase,jdbcType=VARCHAR},
      lastcompany = #{lastcompany,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      worksate = #{worksate,jdbcType=INTEGER},
      resumestate = #{resumestate,jdbcType=INTEGER},
      resumefile = #{resumefile,jdbcType=VARCHAR},
      dresume = #{dresume,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      delflag = #{delflag,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      educations = #{educations,jdbcType=VARCHAR},
      workexperiences = #{workexperiences,jdbcType=VARCHAR},
      expectjob = #{expectjob,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=INTEGER},
      languagelevel = #{languagelevel,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      livebase = #{livebase,jdbcType=VARCHAR},
      resumedetail = #{resumedetail,jdbcType=LONGVARBINARY},
      resumedetail1 = #{resumedetail1,jdbcType=LONGVARBINARY},
      resumedetail2 = #{resumedetail2,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hrbc.business.domain.Candidates">
    update candidates
    set username = #{username,jdbcType=VARCHAR},
      phoneno = #{phoneno,jdbcType=VARCHAR},
      phonenobak = #{phonenobak,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      emailbak = #{emailbak,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      picpath = #{picpath,jdbcType=VARCHAR},
      postcard = #{postcard,jdbcType=VARCHAR},
      jobtitle = #{jobtitle,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      majorsub = #{majorsub,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=INTEGER},
      salarymin = #{salarymin,jdbcType=INTEGER},
      salarymax = #{salarymax,jdbcType=INTEGER},
      constellation = #{constellation,jdbcType=VARCHAR},
      hometown = #{hometown,jdbcType=VARCHAR},
      workbase = #{workbase,jdbcType=VARCHAR},
      expectworkbase = #{expectworkbase,jdbcType=VARCHAR},
      lastcompany = #{lastcompany,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      worksate = #{worksate,jdbcType=INTEGER},
      resumestate = #{resumestate,jdbcType=INTEGER},
      resumefile = #{resumefile,jdbcType=VARCHAR},
      dresume = #{dresume,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      delflag = #{delflag,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      educations = #{educations,jdbcType=VARCHAR},
      workexperiences = #{workexperiences,jdbcType=VARCHAR},
      expectjob = #{expectjob,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=INTEGER},
      languagelevel = #{languagelevel,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      livebase = #{livebase,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into candidates (
    username,
    phoneno,
    phonenobak,
    email,
    emailbak,
    idcard,
    picpath,
    postcard,
    jobtitle,
    age,
    gender,
    education,
    major,
    majorsub,
    salary,
    salarymin,
    salarymax,
    constellation,
    hometown,
    workbase,
    expectworkbase,
    lastcompany,
    tags,
    worksate,
    resumestate,
    resumefile,
    dresume,
    state,
    delflag,
    createtime,
    updatetime,
    educations,
    workexperiences,
    expectjob,
    weight,
    languagelevel,
    degree,
    livebase,
    resumedetail,
    resumedetail1,
    resumedetail2
    )
    values
    <foreach collection="recordList" index="index" item="item" separator=",">
      (
      #{item.username,jdbcType=VARCHAR},
      #{item.phoneno,jdbcType=VARCHAR},
      #{item.phonenobak,jdbcType=VARCHAR},
      #{item.email,jdbcType=VARCHAR},
      #{item.emailbak,jdbcType=VARCHAR},
      #{item.idcard,jdbcType=VARCHAR},
      #{item.picpath,jdbcType=VARCHAR},
      #{item.postcard,jdbcType=VARCHAR},
      #{item.jobtitle,jdbcType=VARCHAR},
      #{item.age,jdbcType=INTEGER},
      #{item.gender,jdbcType=VARCHAR},
      #{item.education,jdbcType=VARCHAR},
      #{item.major,jdbcType=VARCHAR},
      #{item.majorsub,jdbcType=VARCHAR},
      #{item.salary,jdbcType=INTEGER},
      #{item.salarymin,jdbcType=INTEGER},
      #{item.salarymax,jdbcType=INTEGER},
      #{item.constellation,jdbcType=VARCHAR},
      #{item.hometown,jdbcType=VARCHAR},
      #{item.workbase,jdbcType=VARCHAR},
      #{item.expectworkbase,jdbcType=VARCHAR},
      #{item.lastcompany,jdbcType=VARCHAR},
      #{item.tags,jdbcType=VARCHAR},
      #{item.worksate,jdbcType=INTEGER},
      #{item.resumestate,jdbcType=INTEGER},
      #{item.resumefile,jdbcType=VARCHAR},
      #{item.dresume,jdbcType=VARCHAR},
      #{item.state,jdbcType=INTEGER},
      #{item.delflag,jdbcType=INTEGER},
      #{item.createtime,jdbcType=TIMESTAMP},
      #{item.updatetime,jdbcType=TIMESTAMP},
      #{item.educations,jdbcType=VARCHAR},
      #{item.workexperiences,jdbcType=VARCHAR},
      #{item.expectjob,jdbcType=VARCHAR},
      #{item.weight,jdbcType=INTEGER},
      #{item.languagelevel,jdbcType=VARCHAR},
      #{item.degree,jdbcType=VARCHAR},
      #{item.livebase,jdbcType=VARCHAR},
      #{item.resumedetail,jdbcType=LONGVARBINARY},
      #{item.resumedetail1,jdbcType=LONGVARBINARY},
      #{item.resumedetail2,jdbcType=LONGVARBINARY}
      )
    </foreach>
  </insert>
</mapper>