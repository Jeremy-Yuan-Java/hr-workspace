<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrbc.business.mapper.JobsCandidatesMapper">
  <resultMap id="BaseResultMap" type="com.hrbc.business.domain.JobsCandidates">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="candidateid" jdbcType="INTEGER" property="candidateid" />
    <result column="candidatename" jdbcType="VARCHAR" property="candidatename" />
    <result column="optime" jdbcType="TIMESTAMP" property="optime" />
    <result column="opuser" jdbcType="INTEGER" property="opuser" />
    <result column="opusername" jdbcType="VARCHAR" property="opusername" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="delflag" jdbcType="INTEGER" property="delflag" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="createuser" jdbcType="VARCHAR" property="createuser" />
    <result column="updateuser" jdbcType="VARCHAR" property="updateuser" />
    <result column="createstaff" jdbcType="VARCHAR" property="createstaff" />
    <result column="updatestaff" jdbcType="VARCHAR" property="updatestaff" />
    <result column="fulltexts" jdbcType="VARCHAR" property="fulltexts" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hrbc.business.domain.JobsCandidates">
    <result column="communicaterecs" jdbcType="LONGVARBINARY" property="communicaterecs" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, candidateid, candidatename, optime, opuser, opusername, remark, state, delflag, 
    createtime, updatetime, createuser, updateuser, createstaff, updatestaff, fulltexts
  </sql>
  <sql id="Blob_Column_List">
    communicaterecs
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hrbc.business.domain.JobsCandidatesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jobs_candidates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hrbc.business.domain.JobsCandidatesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jobs_candidates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jobs_candidates
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jobs_candidates
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hrbc.business.domain.JobsCandidatesExample">
    delete from jobs_candidates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hrbc.business.domain.JobsCandidates">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jobs_candidates (candidateid, candidatename, optime, 
      opuser, opusername, remark, 
      state, delflag, createtime, 
      updatetime, createuser, updateuser, 
      createstaff, updatestaff, fulltexts, 
      communicaterecs)
    values (#{candidateid,jdbcType=INTEGER}, #{candidatename,jdbcType=VARCHAR}, #{optime,jdbcType=TIMESTAMP}, 
      #{opuser,jdbcType=INTEGER}, #{opusername,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{delflag,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{createuser,jdbcType=VARCHAR}, #{updateuser,jdbcType=VARCHAR}, 
      #{createstaff,jdbcType=VARCHAR}, #{updatestaff,jdbcType=VARCHAR}, #{fulltexts,jdbcType=VARCHAR}, 
      #{communicaterecs,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.hrbc.business.domain.JobsCandidates">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jobs_candidates
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="candidateid != null">
        candidateid,
      </if>
      <if test="candidatename != null">
        candidatename,
      </if>
      <if test="optime != null">
        optime,
      </if>
      <if test="opuser != null">
        opuser,
      </if>
      <if test="opusername != null">
        opusername,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="delflag != null">
        delflag,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="createuser != null">
        createuser,
      </if>
      <if test="updateuser != null">
        updateuser,
      </if>
      <if test="createstaff != null">
        createstaff,
      </if>
      <if test="updatestaff != null">
        updatestaff,
      </if>
      <if test="fulltexts != null">
        fulltexts,
      </if>
      <if test="communicaterecs != null">
        communicaterecs,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="candidateid != null">
        #{candidateid,jdbcType=INTEGER},
      </if>
      <if test="candidatename != null">
        #{candidatename,jdbcType=VARCHAR},
      </if>
      <if test="optime != null">
        #{optime,jdbcType=TIMESTAMP},
      </if>
      <if test="opuser != null">
        #{opuser,jdbcType=INTEGER},
      </if>
      <if test="opusername != null">
        #{opusername,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="delflag != null">
        #{delflag,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="createstaff != null">
        #{createstaff,jdbcType=VARCHAR},
      </if>
      <if test="updatestaff != null">
        #{updatestaff,jdbcType=VARCHAR},
      </if>
      <if test="fulltexts != null">
        #{fulltexts,jdbcType=VARCHAR},
      </if>
      <if test="communicaterecs != null">
        #{communicaterecs,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hrbc.business.domain.JobsCandidatesExample" resultType="java.lang.Long">
    select count(*) from jobs_candidates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jobs_candidates
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.candidateid != null">
        candidateid = #{record.candidateid,jdbcType=INTEGER},
      </if>
      <if test="record.candidatename != null">
        candidatename = #{record.candidatename,jdbcType=VARCHAR},
      </if>
      <if test="record.optime != null">
        optime = #{record.optime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.opuser != null">
        opuser = #{record.opuser,jdbcType=INTEGER},
      </if>
      <if test="record.opusername != null">
        opusername = #{record.opusername,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.delflag != null">
        delflag = #{record.delflag,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null">
        createuser = #{record.createuser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateuser != null">
        updateuser = #{record.updateuser,jdbcType=VARCHAR},
      </if>
      <if test="record.createstaff != null">
        createstaff = #{record.createstaff,jdbcType=VARCHAR},
      </if>
      <if test="record.updatestaff != null">
        updatestaff = #{record.updatestaff,jdbcType=VARCHAR},
      </if>
      <if test="record.fulltexts != null">
        fulltexts = #{record.fulltexts,jdbcType=VARCHAR},
      </if>
      <if test="record.communicaterecs != null">
        communicaterecs = #{record.communicaterecs,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update jobs_candidates
    set id = #{record.id,jdbcType=INTEGER},
      candidateid = #{record.candidateid,jdbcType=INTEGER},
      candidatename = #{record.candidatename,jdbcType=VARCHAR},
      optime = #{record.optime,jdbcType=TIMESTAMP},
      opuser = #{record.opuser,jdbcType=INTEGER},
      opusername = #{record.opusername,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      delflag = #{record.delflag,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=VARCHAR},
      updateuser = #{record.updateuser,jdbcType=VARCHAR},
      createstaff = #{record.createstaff,jdbcType=VARCHAR},
      updatestaff = #{record.updatestaff,jdbcType=VARCHAR},
      fulltexts = #{record.fulltexts,jdbcType=VARCHAR},
      communicaterecs = #{record.communicaterecs,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jobs_candidates
    set id = #{record.id,jdbcType=INTEGER},
      candidateid = #{record.candidateid,jdbcType=INTEGER},
      candidatename = #{record.candidatename,jdbcType=VARCHAR},
      optime = #{record.optime,jdbcType=TIMESTAMP},
      opuser = #{record.opuser,jdbcType=INTEGER},
      opusername = #{record.opusername,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      delflag = #{record.delflag,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=VARCHAR},
      updateuser = #{record.updateuser,jdbcType=VARCHAR},
      createstaff = #{record.createstaff,jdbcType=VARCHAR},
      updatestaff = #{record.updatestaff,jdbcType=VARCHAR},
      fulltexts = #{record.fulltexts,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hrbc.business.domain.JobsCandidates">
    update jobs_candidates
    <set>
      <if test="candidateid != null">
        candidateid = #{candidateid,jdbcType=INTEGER},
      </if>
      <if test="candidatename != null">
        candidatename = #{candidatename,jdbcType=VARCHAR},
      </if>
      <if test="optime != null">
        optime = #{optime,jdbcType=TIMESTAMP},
      </if>
      <if test="opuser != null">
        opuser = #{opuser,jdbcType=INTEGER},
      </if>
      <if test="opusername != null">
        opusername = #{opusername,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="delflag != null">
        delflag = #{delflag,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        createuser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updateuser != null">
        updateuser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="createstaff != null">
        createstaff = #{createstaff,jdbcType=VARCHAR},
      </if>
      <if test="updatestaff != null">
        updatestaff = #{updatestaff,jdbcType=VARCHAR},
      </if>
      <if test="fulltexts != null">
        fulltexts = #{fulltexts,jdbcType=VARCHAR},
      </if>
      <if test="communicaterecs != null">
        communicaterecs = #{communicaterecs,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hrbc.business.domain.JobsCandidates">
    update jobs_candidates
    set candidateid = #{candidateid,jdbcType=INTEGER},
      candidatename = #{candidatename,jdbcType=VARCHAR},
      optime = #{optime,jdbcType=TIMESTAMP},
      opuser = #{opuser,jdbcType=INTEGER},
      opusername = #{opusername,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      delflag = #{delflag,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=VARCHAR},
      updateuser = #{updateuser,jdbcType=VARCHAR},
      createstaff = #{createstaff,jdbcType=VARCHAR},
      updatestaff = #{updatestaff,jdbcType=VARCHAR},
      fulltexts = #{fulltexts,jdbcType=VARCHAR},
      communicaterecs = #{communicaterecs,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hrbc.business.domain.JobsCandidates">
    update jobs_candidates
    set candidateid = #{candidateid,jdbcType=INTEGER},
      candidatename = #{candidatename,jdbcType=VARCHAR},
      optime = #{optime,jdbcType=TIMESTAMP},
      opuser = #{opuser,jdbcType=INTEGER},
      opusername = #{opusername,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      delflag = #{delflag,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=VARCHAR},
      updateuser = #{updateuser,jdbcType=VARCHAR},
      createstaff = #{createstaff,jdbcType=VARCHAR},
      updatestaff = #{updatestaff,jdbcType=VARCHAR},
      fulltexts = #{fulltexts,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into jobs_candidates (
    candidateid,
    candidatename,
    optime,
    opuser,
    opusername,
    remark,
    state,
    delflag,
    createtime,
    updatetime,
    createuser,
    updateuser,
    createstaff,
    updatestaff,
    fulltexts,
    communicaterecs
    )
    values
    <foreach collection="recordList" index="index" item="item" separator=",">
      (
      #{item.candidateid,jdbcType=INTEGER},
      #{item.candidatename,jdbcType=VARCHAR},
      #{item.optime,jdbcType=TIMESTAMP},
      #{item.opuser,jdbcType=INTEGER},
      #{item.opusername,jdbcType=VARCHAR},
      #{item.remark,jdbcType=VARCHAR},
      #{item.state,jdbcType=INTEGER},
      #{item.delflag,jdbcType=INTEGER},
      #{item.createtime,jdbcType=TIMESTAMP},
      #{item.updatetime,jdbcType=TIMESTAMP},
      #{item.createuser,jdbcType=VARCHAR},
      #{item.updateuser,jdbcType=VARCHAR},
      #{item.createstaff,jdbcType=VARCHAR},
      #{item.updatestaff,jdbcType=VARCHAR},
      #{item.fulltexts,jdbcType=VARCHAR},
      #{item.communicaterecs,jdbcType=LONGVARBINARY}
      )
    </foreach>
  </insert>
</mapper>